#!/bin/bash -e

if [ "$1" = --version ] || [ "$1" = -v ]; then
   echo 'git-tlog 0.1'
   exit 0
fi

die_with_status () {
   status="$1"
   shift

   echo >&2 "$@"
   exit "$status"
}

if [ "$#" -lt 2 ] || [ "$1" = --help ] || [ "$1" = -h ]; then
   die_with_status 1 "Usage: $0 [options] <commitish> <commitish>"
fi

program=$(basename "$0")
case $program in
   git-tlog)
      dots='..'
      ;;
   git-tdiff)
      dots='...'
      ;;
   *)
      die_with_status 2 "I don't know how to be run as $program; aborting."
      ;;
esac
baseProgram=$(sed 's/git-t//' <<<"$program")

# Pull the last two parameters out of $@.
# We can extract arbitrary elements using ${@: -2:1} syntax (
# http://stackoverflow.com/a/6428901/120999 ), but it doesn't seem possible to
# remove them from $@ that way.  Instead, make a copy, modify that, and reset
# $@ when we're done, as per http://stackoverflow.com/a/6595266/120999 .
a=("$@")
commitishA=${a[$#-2]}
commitishB=${a[$#-1]}
unset a[$#-2]
unset a[$#-1]
set -- "${a[@]}"

if [ -n "$TMUX" ]; then
   git $baseProgram $@ $commitishA$dots$commitishB
   tmux \
      split-window -d -h \
      "git $baseProgram $@ $commitishB$dots$commitishA" \; \
else
   tmux new \
      -s $program \
      "git $baseProgram $@ $commitishA$dots$commitishB" \; \
      select-layout tiled \;\
      split-window -d -h \
      "git $baseProgram $@ $commitishB$dots$commitishA" \;\
fi
